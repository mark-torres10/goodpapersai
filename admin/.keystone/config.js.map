{
  "version": 3,
  "sources": ["../keystone.ts", "../schema.ts"],
  "sourcesContent": ["import { config } from '@keystone-6/core';\nimport { lists } from './schema';\nimport { createAuth } from '@keystone-6/auth';\nimport { statelessSessions } from '@keystone-6/core/session';\nimport 'dotenv/config'; // Import dotenv to load environment variables\n\n// Define the authentication configuration\nconst sessionSecret = process.env.SESSION_SECRET || 'complex-secret-for-goodpapers-app';\n\n// Define the auth configuration\nconst { withAuth } = createAuth({\n  listKey: 'User',\n  identityField: 'email',\n  secretField: 'password',\n  initFirstItem: {\n    fields: ['name', 'email', 'password'],\n    skipKeystoneWelcome: true,\n    // Use environment variables for initial admin user\n    itemData: {\n      name: 'Admin',\n      email: process.env.KEYSTONE_ADMIN_USERNAME || 'admin',\n      password: process.env.KEYSTONE_ADMIN_PW || 'admin',\n    },\n  },\n});\n\n// Define the Keystone config\nexport default withAuth(\n  config({\n    db: {\n      provider: 'sqlite',\n      url: 'file:./goodpapers.db',\n    },\n    lists,\n    session: statelessSessions({\n      secret: sessionSecret,\n      maxAge: 60 * 60 * 24 * 30, // 30 days\n    }),\n    server: {\n      port: 3002, // Use a different port to avoid conflicts\n      cors: { origin: ['http://localhost:3000'], credentials: true },\n    },\n    // Additional configuration\n    ui: {\n      isAccessAllowed: (context) => !!context.session?.data,\n    },\n  })\n); ", "import { list } from '@keystone-6/core';\nimport { text, relationship, checkbox, integer, timestamp, password } from '@keystone-6/core/fields';\nimport { allowAll } from '@keystone-6/core/access';\n\nexport const lists = {\n  User: list({\n    access: allowAll,\n    fields: {\n      name: text({ validation: { isRequired: true } }),\n      email: text({\n        validation: { isRequired: true },\n        isIndexed: 'unique',\n      }),\n      password: password({ validation: { isRequired: true } }),\n    },\n  }),\n  \n  Paper: list({\n    access: allowAll,\n    fields: {\n      title: text({ validation: { isRequired: true } }),\n      authors: text({ validation: { isRequired: true } }),\n      journal: text(),\n      year: integer({ validation: { isRequired: true } }),\n      doi: text(),\n      url: text(),\n      abstract: text({ ui: { displayMode: 'textarea' } }),\n      isCurrentlyReading: checkbox({ defaultValue: false }),\n      updates: relationship({ ref: 'Update.paper', many: true }),\n    },\n    ui: {\n      labelField: 'title',\n      listView: {\n        initialColumns: ['title', 'authors', 'year', 'isCurrentlyReading'],\n      },\n    },\n  }),\n  \n  Update: list({\n    access: allowAll,\n    fields: {\n      paper: relationship({ ref: 'Paper.updates' }),\n      paperTitle: text({ validation: { isRequired: true } }),\n      message: text({ validation: { isRequired: true } }),\n      timestamp: timestamp({ defaultValue: { kind: 'now' } }),\n    },\n    ui: {\n      labelField: 'message',\n      listView: {\n        initialColumns: ['paper', 'message', 'timestamp'],\n      },\n    },\n  }),\n}; "],
  "mappings": "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",
  "names": ["import_core"]
}
